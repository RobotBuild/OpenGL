import pygame
from pygame.locals import *
from OpenGL.GL import *
from OpenGL.GLU import *

def crosshair():
    
    
    glBegin(GL_LINES)
    
    glColor3fv((0, 1, 0))
    glVertex3fv((-2, 0, 0,))
    glVertex3fv((2, 0, 0))
    
    glColor3fv((1, 0, 0))
    glVertex3fv((0, -2, 0))
    glVertex3fv((0, 2, 0))
    
    glColor3fv((0, 0, 1))
    glVertex3fv((0, 0, -2))
    glVertex3fv((0, 0, 2))

    glEnd()
    
    
def Cube():
    
    glBegin(GL_LINES)
    glColor3fv((1, 1, 1))
    
    # square 1
    glVertex3fv((-0.5, -0.5, -0.5))
    glVertex3fv((-0.5, 0.5, -0.5))
    
    glVertex3fv((-0.5, 0.5, -0.5))
    glVertex3fv((0.5, 0.5, -0.5))
    
    glVertex3fv((0.5, 0.5, -0.5))
    glVertex3fv((0.5, -0.5, -0.5))
    
    glVertex3fv((0.5, -0.5, -0.5))
    glVertex3fv((-0.5, -0.5, -0.5))
    
    # square 2
    glVertex3fv((-0.5, -0.5, 0.5))
    glVertex3fv((-0.5, 0.5, 0.5))
    
    glVertex3fv((-0.5, 0.5, 0.5))
    glVertex3fv((0.5, 0.5, 0.5))
    
    glVertex3fv((0.5, 0.5, 0.5))
    glVertex3fv((0.5, -0.5, 0.5))
    
    glVertex3fv((0.5, -0.5, 0.5))
    glVertex3fv((-0.5, -0.5, 0.5))
    
    # connecting lines
    glVertex3fv((-0.5, -0.5, -0.5))
    glVertex3fv((-0.5, -0.5, 0.5))
    
    glVertex3fv((-0.5, 0.5, -0.5))
    glVertex3fv((-0.5, 0.5, 0.5))
    
    glVertex3fv((0.5, 0.5, -0.5))
    glVertex3fv((0.5, 0.5, 0.5))
    
    glVertex3fv((0.5, -0.5, -0.5))
    glVertex3fv((0.5, -0.5, 0.5))
    
    glEnd()
    
    

def main():
    pygame.init()
    display = (800,600)
    pygame.display.set_mode(display, DOUBLEBUF|OPENGL)

    gluPerspective(45, (display[0]/display[1]), 0.1, 50.0)

    glTranslatef(0.0, 0.0, -10) # will move back and fourth
    
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    glTranslatef(-0.5,0,0)
                if event.key == pygame.K_RIGHT:
                    glTranslatef(0.5,0,0)

                if event.key == pygame.K_UP:
                    glTranslatef(0,1,0)
                if event.key == pygame.K_DOWN:
                    glTranslatef(0,-1,0)
            
                if event.key == pygame.K_d:
                    glRotatef(2,0,1,0)
                    
                if event.key == pygame.K_a:
                    glRotatef(-2,0,1,0)   
                    
                if event.key == pygame.K_w:
                    glRotatef(-2,1,0,0)
                    
                if event.key == pygame.K_s:
                    glRotatef(2,1,0,0)
                    
                    
                    

            if event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 4:
                    glTranslatef(0,0,1.0)

                if event.button == 5:
                    glTranslatef(0,0,-1.0)
            
        glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
        Cube()
        crosshair()
        pygame.display.flip()
        pygame.time.wait(10)
main()
